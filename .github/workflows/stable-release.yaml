name: Stable Release

on:
    workflow_dispatch:

jobs:
    stable-release:
        runs-on: ubuntu-latest
        environment: production
        permissions:
            contents: write
            pull-requests: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  fetch-depth: 0

            - name: Create stable release from latest RC
              run: |
                  # Step 1: Fetch all tags from remote
                  git fetch --tags

                  # Find latest RC tag
                  RC_TAG=$(git tag -l "v*-rc.*" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+$' | sort -V | tail -n 1)

                  if [ -z "$RC_TAG" ]; then
                      echo "❌ No RC tags found. Please create an RC release first."
                      exit 1
                  fi

                  # Step 2: Checkout the RC tag
                  git checkout "$RC_TAG"
                  echo "✅ Checked out RC tag: $RC_TAG"

                  # Step 3: Create stable tag (remove -rc.* suffix)
                  STABLE_TAG=$(echo $RC_TAG | sed 's/-rc\.[0-9]*$//')

                  echo "Creating stable release: $STABLE_TAG from $RC_TAG"

                  # Check if stable tag already exists
                  if git tag -l | grep -q "^${STABLE_TAG}$"; then
                      echo "❌ Stable tag $STABLE_TAG already exists."
                      exit 1
                  fi

                  # Configure git user
                  git config user.name "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

                  # Create the stable tag
                  git tag -a "$STABLE_TAG" -m "Stable release $STABLE_TAG (from $RC_TAG)"

                  # Step 4: Push the stable tag to origin
                  git push origin "$STABLE_TAG"

                  echo "stable_tag=$STABLE_TAG" >> $GITHUB_ENV
                  echo "rc_tag=$RC_TAG" >> $GITHUB_ENV

            - name: Create GitHub Release
              uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
              with:
                  tag_name: ${{ env.stable_tag }}
                  name: ${{ env.stable_tag }}
                  body: |
                      Stable release from RC: ${{ env.rc_tag }}

                      Released by: @${{ github.actor }}
                      Workflow: [${{ github.workflow }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
                  generate_release_notes: true
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Set BUILD_VERSION in expoPrebuild.ts to next minor version
              run: |
                  FILE=".expo-prebuild/expoPrebuild.ts"
                  if ! grep -q 'BUILD_VERSION' "$FILE"; then
                    echo "BUILD_VERSION not found in $FILE"
                    exit 1
                  fi
                  STABLE_VERSION="${{ env.stable_tag }}"
                  # Remove leading 'v' if present
                  STABLE_VERSION="${STABLE_VERSION#v}"
                  
                  # Parse version components (MAJOR.MINOR.PATCH)
                  IFS='.' read -r MAJOR MINOR PATCH <<< "$STABLE_VERSION"
                  NEW_MINOR=$((MINOR + 1))
                  NEW_VERSION="${MAJOR}.${NEW_MINOR}.0"

                  echo "Bumping BUILD_VERSION from $STABLE_VERSION to $NEW_VERSION (next minor version)"
                  
                  # Replace the version in the BUILD_VERSION line
                  sed -i.bak -E "s/(BUILD_VERSION\s*=\s*['\"])[0-9]+\.[0-9]+\.[0-9]+(['\"])/\1${NEW_VERSION}\2/" "$FILE"
                  rm "$FILE.bak"
                  
                  echo "next_version=$NEW_VERSION" >> $GITHUB_ENV

            - name: Create PR for bumped BUILD_VERSION in expoPrebuild.ts
              uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7
              with:
                  commit-message: 'chore(build): pltfe bump BUILD_VERSION to ${{ env.next_version }}'
                  title: 'chore(build): pltfe bump BUILD_VERSION to ${{ env.next_version }}'
                  body: |
                      This PR automatically bumps the BUILD_VERSION in expoPrebuild.ts to ${{ env.next_version }} (next minor version) after stable release ${{ env.stable_tag }}.
                  branch: task/pltfe-bump-build-version-${{ env.next_version }}
                  base: ${{ github.ref_name }}
                  labels: |
                      automated pr
                  add-paths: |
                      .expo-prebuild/expoPrebuild.ts
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

