name: Stable Release

on:
    workflow_dispatch:

jobs:
    create-stable-release:
        runs-on: ubuntu-latest
        environment: production # Environment protection rules will require approval before this job runs
        permissions:
            contents: write
            pull-requests: read
        outputs:
            stable_tag: ${{ steps.create_tag.outputs.stable_tag }}
            rc_tag: ${{ steps.find_rc.outputs.rc_tag }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  fetch-depth: 0 # Fetch full history to access all tags

            - name: Find latest RC tag
              id: find_rc
              run: |
                  # Fetch all tags from remote
                  git fetch --tags

                  # Find the latest RC tag (format: v*.*..*-rc.*)
                  LATEST_RC_TAG=$(git tag -l "v*-rc.*" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+$' | sort -V | tail -n 1)

                  if [ -z "$LATEST_RC_TAG" ]; then
                      echo "❌ No RC tags found. Please create an RC release first."
                      exit 1
                  fi

                  echo "Latest RC tag found: $LATEST_RC_TAG"
                  echo "rc_tag=$LATEST_RC_TAG" >> $GITHUB_OUTPUT

            - name: Checkout latest RC tag
              run: |
                  git checkout ${{ steps.find_rc.outputs.rc_tag }}
                  echo "✅ Checked out RC tag: ${{ steps.find_rc.outputs.rc_tag }}"

            - name: Create stable tag
              id: create_tag
              run: |
                  RC_TAG="${{ steps.find_rc.outputs.rc_tag }}"

                  # Remove the -rc.* suffix to create stable tag (e.g., v1.2.0-rc.1 -> v1.2.0)
                  STABLE_TAG=$(echo $RC_TAG | sed 's/-rc\.[0-9]*$//')

                  echo "Creating stable tag: $STABLE_TAG"

                  # Check if stable tag already exists
                  if git tag -l | grep -q "^${STABLE_TAG}$"; then
                      echo "❌ Stable tag $STABLE_TAG already exists. Cannot create duplicate stable release."
                      exit 1
                  fi

                  # Configure git user
                  git config user.name "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

                  # Create and push the stable tag
                  git tag -a "$STABLE_TAG" -m "Stable release $STABLE_TAG (from $RC_TAG)"
                  git push origin "$STABLE_TAG"

                  echo "✅ Created and pushed stable tag: $STABLE_TAG"
                  echo "stable_tag=$STABLE_TAG" >> $GITHUB_OUTPUT

    create-github-release:
        needs: create-stable-release
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - name: Create GitHub Release
              uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
              with:
                  tag_name: ${{ needs.create-stable-release.outputs.stable_tag }}
                  name: '🚀 Release ${{ needs.create-stable-release.outputs.stable_tag }}'
                  body: |
                      Stable release based on RC tag: ${{ needs.create-stable-release.outputs.rc_tag }}

                      Released by: @${{ github.actor }}
                  generate_release_notes: true
                  draft: false
                  prerelease: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Notify completion
              run: |
                  echo "🎉 Successfully created stable release: ${{ needs.create-stable-release.outputs.stable_tag }}"
                  echo "📦 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ needs.create-stable-release.outputs.stable_tag }}"
